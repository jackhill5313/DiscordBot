{
  "_args": [
    [
      {
        "raw": "cjopus@^0.0.4",
        "scope": null,
        "escapedName": "cjopus",
        "name": "cjopus",
        "rawSpec": "^0.0.4",
        "spec": ">=0.0.4 <0.0.5",
        "type": "range"
      },
      "D:\\GitHub Journey\\EmoticonInjector\\node_modules\\discord.io"
    ]
  ],
  "_from": "cjopus@>=0.0.4 <0.0.5",
  "_id": "cjopus@0.0.4",
  "_inCache": true,
  "_location": "/cjopus",
  "_nodeVersion": "5.12.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/cjopus-0.0.4.tgz_1475559075502_0.7690162525977939"
  },
  "_npmUser": {
    "name": "izy521",
    "email": "kyekye321@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cjopus@^0.0.4",
    "scope": null,
    "escapedName": "cjopus",
    "name": "cjopus",
    "rawSpec": "^0.0.4",
    "spec": ">=0.0.4 <0.0.5",
    "type": "range"
  },
  "_requiredBy": [
    "/discord.io"
  ],
  "_resolved": "https://registry.npmjs.org/cjopus/-/cjopus-0.0.4.tgz",
  "_shasum": "46f3cfc96b83f7d78446de8b4cfd994b5889a9a0",
  "_shrinkwrap": null,
  "_spec": "cjopus@^0.0.4",
  "_where": "D:\\GitHub Journey\\EmoticonInjector\\node_modules\\discord.io",
  "author": {
    "name": "izy521"
  },
  "bugs": {
    "url": "https://github.com/izy521/CJOpus/issues"
  },
  "dependencies": {},
  "description": "Emscripten bindings for libopus. Encode / Decode your audio to opus with pure JS.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "46f3cfc96b83f7d78446de8b4cfd994b5889a9a0",
    "tarball": "https://registry.npmjs.org/cjopus/-/cjopus-0.0.4.tgz"
  },
  "homepage": "https://github.com/izy521/CJOpus#readme",
  "keywords": [
    "Opus",
    "libopus",
    "Emscripten",
    "Audio",
    "LLVM"
  ],
  "license": "MIT",
  "main": "./lib/Opus.js",
  "maintainers": [
    {
      "name": "izy521",
      "email": "kyekye321@gmail.com"
    }
  ],
  "name": "cjopus",
  "optionalDependencies": {},
  "readme": "# CJOpus\nEmscripten (C++/JavaScript) bindings for libopus\n\nA module to encode PCM data to and decode PCM data from Opus.\n\n## Using\n\nThe `lib` folder includes a pre-compiled version. Requiring the `Opus.js` entrypoint file should be enough.\n\n### OpusEncoder\n\n```js\n//Tries to mimic `node-opus` in syntax.\nvar encoder = new OpusEncoder( 48000, 2 );\n```\n\n### OpusEncoder#encode(Buffer/TypedArray/Array)\n\n```js\nvar PCM = getPCMDataSomehow();\nvar encoded = encoder.encode( PCM );\n```\n\n### OpusEncoder#decode(Buffer/TypedArray/Array)\n\n```js\nvar OPUS = getOPUSDataSomehow();\nvar decoded = encoder.decode( OPUS );\n```\n\n### OpusEncoder#encodeUnsafe / OpusEncoder#decodeUnsafe\n\nThese two methods work just like the safe versions, however they don't do any error checking and they use `.subarray()` instead of `.slice()`. Because of this, it's a bit faster. It's relatively safe to use, just know that if an encoding error happens, it will return an empty `Uint8Array` (encode) or `Int16Array` (decode).\n\n### OpusEncoder#destroy()\n\n```js\nencoder.destroy();\n```\n\nSince this is an Emscripten module (that also has to malloc), the memory also needs to be freed manually when finished. It's a small program, perhaps under 30KB of dynamically allocated memory, but that can add up.\n\n## Building\n\nThe required packages for building (under Debian-based distros) are:\n\n* git\n* build-essential\n* libtool\n\n```bash\n$ git clone --recursive https://github.com/izy521/CJOpus.git\n$ cd CJOpus\n$ make\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/izy521/CJOpus.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.4"
}
